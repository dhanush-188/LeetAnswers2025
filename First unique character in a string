Problem 387: first unique character in a string
DS : string


import java.util.Hashtable;

class Solution {
    public int firstUniqChar(String s) {
        // Hashtable to store the character and its corresponding frequency
        Hashtable<Character, Integer> map = new Hashtable<>();

        // Build the hashtable with character frequencies
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (map.containsKey(c)) {
                map.put(c, map.get(c) + 1); // Increment frequency if character already exists
            } else {
                map.put(c, 1); // Initialize frequency to 1 if character doesn't exist
            }
        }

        // Iterate through the string again to find the first unique character
        for (int i = 0; i < s.length(); i++) {
            if (map.get(s.charAt(i)) == 1) {
                return i; // Return the index of the first unique character
            }
        }

        return -1; // Return -1 if no unique character exists
    }
}

//time complexity : o(2n) --> o(n)
//space complexity : o(n)
